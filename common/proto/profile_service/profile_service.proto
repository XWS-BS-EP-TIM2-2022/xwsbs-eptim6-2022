syntax = "proto3";

option go_package = "github.com/XWS-BS-EP-TIM2-2022/xwsbs-eptim6-2022/common/proto/profile_service";

package profile_service;
import "google/api/annotations.proto";
//**
// 	myRouter.HandleFunc("/user", uh.GetUser).Methods("GET")
//	myRouter.HandleFunc("/users", uh.UpdateUser).Methods("PUT")
//
//	myRouter.HandleFunc("/users/follow/{id}", uh.FollowUser).Methods("PUT")
//	myRouter.HandleFunc("/users/unfollow/{id}", uh.UnfollowUser).Methods("PUT")
//	myRouter.HandleFunc("/users/accept-follow-request/{id}", uh.AcceptFollow).Methods("PUT")
//	myRouter.HandleFunc("/users/reject-follow-request/{id}", uh.RejectFollow).Methods("PUT")
//
// *//
service ProfileService {
  rpc GetAllUsers (EmptyRequest) returns (UsersResponse){
    option (google.api.http) = {
      get: "/api/users"
    };
  }
  rpc AddNewUser (UserRequest) returns (UserResponse){
    option (google.api.http) = {
      post: "/api/users"
      body: "user"
    };
  }

  rpc AddSkill (SkillRequest) returns (UserResponse){
    option (google.api.http) = {
      put: "/api/users/skill"
      body: "skill"
    };
  }
  rpc AddInterest (InterestRequest) returns (UserResponse){
    option (google.api.http) = {
      put: "/api/users/interest"
      body: "interest"
    };
  }
  rpc AddExperience (ExperienceRequest) returns (UserResponse){
    option (google.api.http) = {
      put: "/api/users/experience"
      body: "experience"
    };
  }
  rpc AddEducation (EducationRequest) returns (UserResponse){
    option (google.api.http) = {
      put: "/api/users/education"
      body: "education"
    };
  }

  rpc FollowUser (FollowUserRequest) returns (UserResponse){
    option (google.api.http) = {
      put: "/users/follow/{id}"
    };
  }
  rpc UnFollowUser (FollowUserRequest) returns (UserResponse){
    option (google.api.http) = {
      put: "/users/unfollow/{id}"
    };
  }

  rpc FollowResponse (FollowUserRequest) returns (UserResponse){
    option (google.api.http) = {
      put: "/users/follow-requests/{id}"
    };
  }
}


message EmptyRequest{}
message FollowUserRequest{
  string id=1;
}

message UserRequest{
  User user=1;
}
message UserResponse{
  User user=1;
}
message UsersResponse{
  repeated User users=1;
}

message Follower{
  string username = 1;
}

message Experience{
  string text = 1;
}
message ExperienceRequest{
  Experience experience=1;
}

message Skill{
  string text = 1;
}
message SkillRequest{
  Skill skill=1;
}

message Interest{
  string text = 1;
}
message InterestRequest{
  Interest interest = 1;
}

message Education{
  string text = 1;
}
message EducationRequest{
  Education education=1;
}

message User {
  string username = 1;
  string name = 2;
  string surname = 3;
  string password = 4;
  string email = 5;
  string telephone = 6;
  string gender = 7;
  string birthDate = 8;
  string biography = 9;
  repeated  Experience experiences = 10;
  repeated Education educations = 11;
  repeated Skill skills = 12;
  repeated Interest interests = 13;
  repeated Follower followers = 14;
  repeated Follower followings = 16;
  bool isPublic = 17;
  repeated Follower followRequests = 18;
}