// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v3.20.1
// source: job_offers_service/job_offers_service.proto

package job_offers_service

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// JobOffersServiceClient is the client API for JobOffersService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type JobOffersServiceClient interface {
	GetAllJobOffers(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*JobOffersResponse, error)
	GetAllJobOffersByUsername(ctx context.Context, in *UsernameMessage, opts ...grpc.CallOption) (*JobOffersResponse, error)
	CreateNewJobOffer(ctx context.Context, in *CreateJobOfferMessage, opts ...grpc.CallOption) (*JobOfferResponse, error)
}

type jobOffersServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewJobOffersServiceClient(cc grpc.ClientConnInterface) JobOffersServiceClient {
	return &jobOffersServiceClient{cc}
}

func (c *jobOffersServiceClient) GetAllJobOffers(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*JobOffersResponse, error) {
	out := new(JobOffersResponse)
	err := c.cc.Invoke(ctx, "/job_offers_service.JobOffersService/GetAllJobOffers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *jobOffersServiceClient) GetAllJobOffersByUsername(ctx context.Context, in *UsernameMessage, opts ...grpc.CallOption) (*JobOffersResponse, error) {
	out := new(JobOffersResponse)
	err := c.cc.Invoke(ctx, "/job_offers_service.JobOffersService/GetAllJobOffersByUsername", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *jobOffersServiceClient) CreateNewJobOffer(ctx context.Context, in *CreateJobOfferMessage, opts ...grpc.CallOption) (*JobOfferResponse, error) {
	out := new(JobOfferResponse)
	err := c.cc.Invoke(ctx, "/job_offers_service.JobOffersService/CreateNewJobOffer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// JobOffersServiceServer is the server API for JobOffersService service.
// All implementations must embed UnimplementedJobOffersServiceServer
// for forward compatibility
type JobOffersServiceServer interface {
	GetAllJobOffers(context.Context, *EmptyRequest) (*JobOffersResponse, error)
	GetAllJobOffersByUsername(context.Context, *UsernameMessage) (*JobOffersResponse, error)
	CreateNewJobOffer(context.Context, *CreateJobOfferMessage) (*JobOfferResponse, error)
	mustEmbedUnimplementedJobOffersServiceServer()
}

// UnimplementedJobOffersServiceServer must be embedded to have forward compatible implementations.
type UnimplementedJobOffersServiceServer struct {
}

func (UnimplementedJobOffersServiceServer) GetAllJobOffers(context.Context, *EmptyRequest) (*JobOffersResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAllJobOffers not implemented")
}
func (UnimplementedJobOffersServiceServer) GetAllJobOffersByUsername(context.Context, *UsernameMessage) (*JobOffersResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAllJobOffersByUsername not implemented")
}
func (UnimplementedJobOffersServiceServer) CreateNewJobOffer(context.Context, *CreateJobOfferMessage) (*JobOfferResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateNewJobOffer not implemented")
}
func (UnimplementedJobOffersServiceServer) mustEmbedUnimplementedJobOffersServiceServer() {}

// UnsafeJobOffersServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to JobOffersServiceServer will
// result in compilation errors.
type UnsafeJobOffersServiceServer interface {
	mustEmbedUnimplementedJobOffersServiceServer()
}

func RegisterJobOffersServiceServer(s grpc.ServiceRegistrar, srv JobOffersServiceServer) {
	s.RegisterService(&JobOffersService_ServiceDesc, srv)
}

func _JobOffersService_GetAllJobOffers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EmptyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(JobOffersServiceServer).GetAllJobOffers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/job_offers_service.JobOffersService/GetAllJobOffers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(JobOffersServiceServer).GetAllJobOffers(ctx, req.(*EmptyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _JobOffersService_GetAllJobOffersByUsername_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UsernameMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(JobOffersServiceServer).GetAllJobOffersByUsername(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/job_offers_service.JobOffersService/GetAllJobOffersByUsername",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(JobOffersServiceServer).GetAllJobOffersByUsername(ctx, req.(*UsernameMessage))
	}
	return interceptor(ctx, in, info, handler)
}

func _JobOffersService_CreateNewJobOffer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateJobOfferMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(JobOffersServiceServer).CreateNewJobOffer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/job_offers_service.JobOffersService/CreateNewJobOffer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(JobOffersServiceServer).CreateNewJobOffer(ctx, req.(*CreateJobOfferMessage))
	}
	return interceptor(ctx, in, info, handler)
}

// JobOffersService_ServiceDesc is the grpc.ServiceDesc for JobOffersService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var JobOffersService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "job_offers_service.JobOffersService",
	HandlerType: (*JobOffersServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetAllJobOffers",
			Handler:    _JobOffersService_GetAllJobOffers_Handler,
		},
		{
			MethodName: "GetAllJobOffersByUsername",
			Handler:    _JobOffersService_GetAllJobOffersByUsername_Handler,
		},
		{
			MethodName: "CreateNewJobOffer",
			Handler:    _JobOffersService_CreateNewJobOffer_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "job_offers_service/job_offers_service.proto",
}
